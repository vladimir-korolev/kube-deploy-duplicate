# Default values for ddprofiler-rc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Namespaces where the managed objects are
targetNameSpaces:
  - profiler

# It is a main config to find managed object
# It is separated from other configmaps because we have to syncronize this configmap name with crd object
# "profiler" is namespace where managed objects are
# "deployment" is type of managed object. At present only deployment type of objects is supported
# "profiler-worker" is name of deployment to be managed
config:
  name: rcconfig
  data:
    profiler-rc-config: |-
      profiler:
        deployments:
          profiler-worker:
            env: "PROFILING_ENABLED: True"
            scale_factor: "0.5"
            name_suffix: "profiler"

# configMaps:
# It possible to add some additional configmap



image:
  repository: 713544964960.dkr.ecr.us-east-1.amazonaws.com/grove/core-ddprofiler-rc
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

initConfig:
#  clientType: incluster
  clientType: local
  eksCluster: staging-app1
  crdName: ddprof-rcconfig
  logLevel: INFO

serviceAccount:
  create: true
  annotations: {}
  name: ddprofiler-sa

roles:
  def2: ddprofiler-sa
  default: ddprofiler-sa2

roles_permissions:
  apiGroups: '["", extensions, apps, crds.grove]'
  resources: '[pods, events, configmaps, deployments, deployments/extensions, deployments/scale, crds, ddprofcrds]'
  verbs: '[get, watch, list, update, create, patch, delete]'

customResources:
  ddprof-config:
    name: ddprof-rcconfig
    kind: DDProfCrd
    data:
      ruleType: configmap
      cmConfigTag: profiler-rc-config

replicaCount: 1

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}



